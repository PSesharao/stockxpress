product-service

com.seshrao.stockxpress.productservice

order-service

com.seshrao.stockxpress.orderservice

inventory-service

com.seshrao.stockxpress.inventoryservice


discovery-server

DiscoveryServerApplication

api-gateway 

ApiGatewayApplication 





rPk1tGrbyCc096hqVfxFeabvESSoimvX

"issuer": "http://localhost:8181/realms/stockxpress",

How to make a request ? 

Step 1 : Run 

docker run -p 8181:8080 -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak:22.0.1 start-dev

Step 2 : Go to 

http://localhost:8181/ 

Step 3 : Go to Administrative Console

Here give the Username : admin and Password : admin 

We have to now Create Realm

Give the realmname as "stockxpress"

Step 4 : Go to Clients

Click on create client 

Under General Settings

Give Client Id as  "stockxpress-app"

Under Capability Config 

Turn on Client authentication

Uncheck both Standard flow , Direct access grants

Check Service accounts roles option

Step 5 : 
We can get the client secret from the Client Credentials 

Step 6 : 
Use this client secret value in the Postman


Go to postman 

Provide the access token url as : http://localhost:8181/realms/stockxpress/protocol/openid-connect/token

Client Id , Client Secret we can get them from what we have created earlier from the postman 
 

For Zipkins : 
docker run -d -p 9411:9411 openzipkin/zipkin

http://localhost:9411/

If we make call to the order service from the API gateway , till order-service it will be single thread only , 
but since we have added the circuitbreaker , we see that inventory-service will be on different thread

Kafka
docker compose up -d

docker ps

docker logs -f zookeeper

notification-service



Dockerhub credentials 

we need configure the dockerhub credentials here in "C:\Users\SESH\.docker\config.json" this file

seshrao

mvn clean compile jib:build


can you please provide the markdown syntax for above the exact content so that I can copy paste that in my README file

why keycloak require data base ? 

docker run -p 8181:8080 -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak:22.0.1 start-dev

The Docker run command above uses the default H2 database that comes bundled with Keycloak. This is suitable for getting started and testing Keycloak, 
but for production use or scenarios requiring data persistence, it's recommended to use an external database like PostgreSQL, MySQL, or others.

Keycloak, an open-source identity and access management (IAM) system, requires a database for several reasons.

Keycloak needs to store and manage a wide range of data, including user account information, authentication tokens, access control policies, client applications, and more. A database provides a structured and efficient way 
to store this data, making it accessible and searchable. 

Keycloak often needs to retrieve and query data efficiently to perform various functions such as user authentication, authorization, and user management. 
Databases offer robust querying capabilities, which are essential for these operations.

I have 2 files application.properties , application-docker.properties , later file will be only used when I need to run the app in docker container , and has specific configuration to that , 
do I have to copy the all properties again to application-docker.properties ? 


docker compose up -d

docker logs -f notification-service

docker logs -f discovery-server

docker logs -f order-service

docker logs -f inventory-service

docker logs -f  mysql-db

docker-compose down


docker pull postgres



How to clean up docker data in local ? 
AppData\Local\Docker\wsl\data\ext4.vhdx

If you're willing to wipe all of your docker data, open the Docker Desktop client, click the bug icon in the top bar, and then click Clean/Purge data:



can you please help me write a git README file for springboot microservices project "stockxpress" below are the services and features

Services : 

Product Service : Create and View Products , acts as the Product Catalog.

Order Service : We can Order Products 

Inventory Service : Order service uses this and can check if product is in stock or not before going to order.

Notification Service :  Can send notifications after the order is placed successfully

Discovery Service : Service Discovery using Netflix Eureka for Dynamic Service Registration , Service Lookup and Load Balancing

API Gateway Service :  API Gateway using Spring Cloud Gateway for Routing and Load Balancing of client requests 

Features : 

Circuit breaker used to provide Fault Tolerance , Preventing Cascading Failures , Fallback Mechanisms

Zipkins used to provide Distributed Tracing , Latency Monitoring and Error Tracing

Event Driven Architecture using Kafka where Order Service produce event , which can be stored in Kafka topic and Notification Service is going to consume that topic.

Order Service ,  Inventory Service and Notification Service are going to interact with each other 

We have synchronous communication between Order Service and Inventory Service and asynchronous communication between Order Service and Notification Service

Keycloak identity and access management ( IAM ) auth server is used to provide support for OAuth 2.0 and OpenID Connect, making it easy to secure APIs and provide identity information to clients securely with JWT tokens. 

The services and are dockerized. 

This project idea is insprired from Programming Techie.